#!/usr/bin/env python

import json
import sys
import cyberprobe.qcomms as q

if len(sys.argv) < 2:
    binding = "cyberprobe"
else:
    binding = sys.argv[1]
    
def handle(msg, output):

    obj = json.loads(msg)

    print
    print "Action: %s" % obj["action"]
    print "Device: %s" % obj["device"]

    print "Time: %s" % obj["time"]

    if obj.has_key("url"):
        print "URL: %s" % obj["url"]

    if obj.has_key("icmp"):
        print "ICMP type: %d" % obj["icmp"]["type"]
        print "ICMP code: %d" % obj["icmp"]["code"]

    if obj.has_key("dns_message"):
        detail=obj["dns_message"]
        if detail.has_key("type"):
            print "Type: %s" % detail["type"]
            if detail["type"] == "query" and detail.has_key("query"):
                for v in detail["query"]:

                    if v.has_key("name"):
                        print "Query name: %s" % v["name"]
                    if v.has_key("type"):
                        print "Query type: %s" % v["type"]
                    if v.has_key("class"):
                        print "Query class: %s" % v["class"]
            if detail.has_key("answer"):
                for v in detail["answer"]:
                    if v.has_key("name"):
                        print "Answer name: %s" % v["name"]
                    if v.has_key("type"):
                        print "Answer type: %s" % v["type"]
                    if v.has_key("class"):
                        print "Answer class: %s" % v["class"]
                    if v.has_key("address"):
                        print "Answer address: %s" % v["address"]

    if obj.has_key("http_request"):
        detail=obj["http_request"]
        print "Method: %s" % detail["method"]
        if detail.has_key("header"):
            for k in detail["header"]:
                 print "%s: %s" % (k, detail["header"][k])

    if obj.has_key("http_response"):
        detail=obj["http_response"]
        print "Code: %d" % detail["code"]
        print "Status: %s" % detail["status"]
        if detail.has_key("header"):
            for k in detail["header"]:
                 print "%s: %s" % (k, detail["header"][k])

    if obj.has_key("ftp_command"):
        detail=obj["ftp_command"]
        print "Command: %s" % detail["command"]

    if obj.has_key("ftp_response"):
        detail=obj["ftp_response"]
        print "Status: %d" % detail["status"]
        for v in detail["text"]:
            print "Text: %s" % v

    if obj.has_key("sip_request"):
        detail=obj["sip_request"]
        print "Method: %s" % detail["method"]
        print "From: %s" % detail["from"]
        print "To: %s" % detail["from"]
        if detail.has_key("header"):
            for k in detail["header"]:
                 print "%s: %s" % (k, detail["header"][k])

    if obj.has_key("sip_response"):
        detail=obj["sip_response"]
        print "Code: %d" % detail["code"]
        print "Status: %s" % detail["status"]
        print "From: %s" % detail["from"]
        print "To: %s" % detail["from"]

    if obj.has_key("smtp_command"):
        detail=obj["smtp_command"]
        print "Command: %s" % detail["command"]

    if obj.has_key("smtp_response"):
        detail=obj["smtp_response"]
        print "Status: %d" % detail["status"]
        for v in detail["text"]:
            print "Text: %s" % v

try:
    q.subscribe(binding, handle)
except Exception, e:
    sys.stderr.write("Exception: %s\n" % str(e))

