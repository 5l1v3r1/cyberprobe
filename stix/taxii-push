#!/usr/bin/env python3

import sys
import argparse
import dateutil.parser
import libtaxii as t
import libtaxii.messages_11 as tm11
import libtaxii.clients as tc
from stix.core import STIXPackage, STIXHeader
from cybox.objects.address_object import Address, EmailAddress
from cybox.objects.file_object import File
from cybox.objects.port_object import Port
from cybox.objects.uri_object import URI
from cybox.objects.user_account_object import UserAccount
import StringIO
import datetime

# Timezone class, representing GMT.
class GMT(datetime.tzinfo):
    """GMT"""

    def utcoffset(self, dt):
        return datetime.timedelta(0)

    def tzname(self, dt):
        return "GMT"

    def dst(self, dt):
        return datetime.timedelta(0)

gmt = GMT()

############################################################################
# main body
############################################################################

# Parse command line arguments
p = argparse.ArgumentParser(description="Poll Client")
p.add_argument("--host", dest="host", default="localhost", 
               help="Host where the Poll Service is hosted. "
               "Defaults to localhost.")
p.add_argument("--port", dest="port", default="8080", 
               help="Port where the Poll Service is hosted. Defaults to "
               "8080.")
p.add_argument("--path", dest="path", default="/services/inbox/default/", 
               help="Path where the Poll Service is hosted. Defaults to "
               "/services/inbox/default/.")
p.add_argument("--collection", dest="collection", default="default", 
               help="Data Collection to poll. Defaults to 'default'.")
p.add_argument("--content-binding", dest="content_binding", 
               default=t.CB_STIX_XML_11, 
               help="Content binding of the Content Block to send. Defaults "
               "to %s" % t.CB_STIX_XML_11)
p.add_argument("--content", dest="content", 
               help="Path where the input content file is located.")

args = p.parse_args()

# Create content block from input file
f = open(args.content, 'r')
cb = tm11.ContentBlock(tm11.ContentBinding(args.content_binding), f.read())
f.close()

# Create poll request
inbox_req = tm11.InboxMessage(message_id=tm11.generate_message_id(),
                              destination_collection_names=[args.collection],
                              content_blocks=[cb])

# Convert to XML for request body
inbox_req_xml = inbox_req.to_xml()

# Create HTTP client
client = tc.HttpClient()
client.setProxy('noproxy') 

# Call TAXII service, using the body
resp = client.callTaxiiService2(args.host, args.path, t.VID_TAXII_XML_11,
                                inbox_req_xml, args.port)

# Get response
resp = t.get_message_from_http_response(resp, '0')

if type(resp) != tm11.StatusMessage:
    print("Expecting a status message!")
    sys.exit(1)

if resp.status_type != tm11.ST_SUCCESS:
    print("%s: %s" % (resp.status_type, resp.message))



